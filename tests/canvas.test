# Test canvas commands                                               -*-tcl-*-
#
# $Id$

source [file join [file dirname [file join [pwd] [info script]]] init.tcl]

testConstraint FreeSans [file exists ../examples/FreeSans.ttf]

package require Tk
wm withdraw .

proc DebugShowCanvas {} {
    wm deiconify .
    pack .c -fill both -expand 1
    tk_messageBox -message "Waiting to close"
    wm withdraw .
}

test canvas-1.1 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest {canvas .c} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-1.2 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest -orient 1 {canvas .c -x 20 -y 20 -width 200 -height 200} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-1.3 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest {canvas .c -x 20 -y 20 -width 200 -height 200} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-1.4 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest {canvas .c -bbox {25 15 45 60}} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-2.1 {image} -body {
    canvas .c
    image create photo img1 -file images/logo125.gif
    .c create rectangle 0 0 250 260 -fill red -outline blue
    .c create image 10 10 -image img1 -anchor nw
    mytest {canvas .c} {
        q * 2.671756 0 0 -2.671756 102.672 897.328 cm *
        82 0 0 -125 10 135 cm /image_canvas_img1 Do Q
    }
} -cleanup {destroy .c} -result 1

test canvas-2.2 {bitmap} -body {
    canvas .c
    .c create rectangle 0 0 250 260 -fill red -outline blue
    .c create bitmap 10 10 -bitmap @../bitmaps/hourglass.xbm -anchor nw \
            -background blue -foreground yellow
    mytest {canvas .c} {
        q * 2.671756 0 0 -2.671756 102.672 897.328 cm *
        19 0 0 -21 10 31 cm /image8 Do *
        0000ffffff00 *
    }
} -cleanup {destroy .c} -result 1

test canvas-3.1 {text} -constraints {runin85 knownbug} -body {
    canvas .c
    .c create rectangle 0 0 500 500 -outline black
    # Needs 8.5 since underline is 8.5 feature
    set font "Helvetica -10"
    .c create text 10 10 -text "Apa\nBepa\nCepa" -underline 5 -anchor nw \
            -font $font -tag apa
    #puts "[.c bbox apa]"
    #puts "[font actual $font]"
    #puts "[font metric $font]"
    # TODO: On a system where output is this:
    #9 10 45 73
    #-family {Nimbus Sans L} -size -14 -weight normal -slant roman -underline 0 -overstrike 0
    #-ascent 17 -descent 4 -linespace 21 -fixed 0
    # I get this instead:
    # 20.047 24.063 m 28.422 24.063 l S
    # And on this system:
    #9 10 36 49
    #-family {Nimbus Sans L} -size -10 -weight normal -slant roman -underline 0 -overstrike 0
    #-ascent 10 -descent 3 -linespace 13 -fixed 0
    # it is:
    # 17.535 20.297 m 23.816 20.297 l S
    mytest {canvas .c} {
        17.535 20.297 m 23.816 20.297 l S
    }
} -cleanup {destroy .c} -result 1

test canvas-3.2 {text, font} -constraints {runin85 FreeSans} -body {
    canvas .c
    .c create rectangle 0 0 500 500 -outline black
    set font "Helvetica -10"
    .c create text 10 10 -text "1\u20ac!" -anchor nw \
            -font $font

    pdf4tcl::loadBaseTrueTypeFont BaseArial "../examples/FreeSans.ttf"
    # "1" "euro" and "!" maps to 0 1 end 2
    set subset [list 49 [expr 0x20AC] 33]
    pdf4tcl::createFontSpecEnc BaseArial MyArial $subset

    mytest {canvas .c -fontmap {"Helvetica -10" MyArial}} "*\x00\x01\x02*"
} -cleanup {destroy .c} -result 1

test canvas-4.1 {sticky} -body {
    # Wide canvas contents
    canvas .c
    .c create rectangle 0 0 500 100 -outline black
    mytest -margin 100 {canvas .c -sticky s} {
        1.195219 0 0 -1.195219 101.195 220.717 cm
    }
} -cleanup {destroy .c} -result 1

test canvas-4.2 {sticky} -body {
    # Tall canvas contents
    canvas .c
    .c create rectangle 0 0 100 500 -outline black
    mytest -margin 100 {canvas .c -sticky e} {
        1.593625 0 0 -1.593625 539.044 898.406
    }
} -cleanup {destroy .c} -result 1

test canvas-4.3 {sticky} -body {
    # Tall canvas contents, sticky news
    canvas .c
    .c create rectangle 0 0 100 500 -outline black
    mytest -margin 100 {canvas .c -sticky news} {
        5.882353 0 0 -1.593625 105.882 898.406 cm
    }
} -cleanup {destroy .c} -result 1

test canvas-4.4 {sticky} -body {
    # Wide canvas contents, sticky news
    canvas .c
    .c create rectangle 0 0 500 100 -outline black
    mytest -margin 100 {canvas .c -sticky wens} {
        1.195219 0 0 -7.843137 101.195 892.157 cm
    }
} -cleanup {destroy .c} -result 1

test canvas-5.1 {stipple} -body {
    canvas .c
    .c create rectangle -10 -10 500 500 -fill "" -outline black
    .c create bitmap 0 0 -bitmap questhead -anchor nw \
            -background blue -foreground yellow
    .c create rectangle 50 -5 80 25 -stipple questhead -fill red
    .c create rectangle -5 50 25 80 -stipple questhead -fill red
    .c create rectangle 50 50 80 80 -stipple questhead -fill red
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    mytest {canvas .c} {startPage} {canvas .c -bbox {5 5 150 150}} {
        /Matrix * 4.828 0 0 4.828 75.862 924.138
    }
} -cleanup {destroy .c} -result 1

test canvas-5.2 {stipple offset} -body {
    canvas .c
    .c create rectangle -10 -10 200 200 -fill "" -outline black
    .c create rectangle -5 -5 25 25 -stipple questhead -fill red
    .c create rectangle 30 -5 60 25 -stipple questhead -fill red
    .c create rectangle -5 30 25 60 -stipple questhead -fill red
    .c create rectangle 30 30 60 60 -stipple questhead -fill red -offset 5,5
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    mytest {canvas .c} {
        /Matrix * 3.302 0 0 3.302 136.321 863.679 *
        /Matrix * 3.302 0 0 3.302 152.831 847.169
    }
} -cleanup {destroy .c} -result 1

test canvas-5.3 {stipple offset} -body {
    canvas .c
    .c create rectangle -10 -10 200 200 -fill "" -outline black
    .c create rectangle -5 -5 25 25 -stipple questhead -fill red
    .c create rectangle 30 -5 60 25 -stipple questhead -fill red
    .c create rectangle -5 30 25 60 -stipple questhead -fill red
    .c create rectangle 30 30 60 60 -stipple questhead -fill red -offset #5,5
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    # If # was supported, this would be different
    mytest {canvas .c} {
        /Matrix * 3.302 0 0 3.302 136.321 863.679 *
        /Matrix * 3.302 0 0 3.302 152.831 847.169
    }
} -cleanup {destroy .c} -result 1

test canvas-5.4 {stipple} -body {
    canvas .c
    .c create rectangle -10 -10 500 500 -fill "" -outline black
    .c create bitmap 0 0 -bitmap gray50 -anchor nw \
            -background blue -foreground yellow
    .c create rectangle 50 -5 80 25 -stipple gray50 -fill red
    .c create rectangle -5 50 25 80 -stipple gray50 -fill red
    .c create rectangle 50 50 80 80 -stipple gray50 -fill red
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    mytest {canvas .c} {startPage} {canvas .c -bbox {5 5 150 150}} {
        /Matrix * 4.828 0 0 4.828 75.862 924.138
    }
} -cleanup {destroy .c} -result 1

test canvas-6.1 {spline} -body {
    canvas .c
    .c create rectangle -10 -10 200 200 -fill "" -outline black
    .c create line 0 0 10 20 -smooth 1
    .c create polygon 20 20 20 40 20 60 20 80 40 80 60 80 80 80 80 60 80 40 80 20 60 20 40 20 -smooth 1
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    mytest {canvas .c} {
        *
    }
} -cleanup {destroy .c} -result 1

test canvas-6.1 {spline} -body {
    canvas .c
    .c create rectangle -10 -10 200 200 -fill "" -outline black
    .c create line 0 0 10 20 -smooth 1
    .c create polygon 20 20 20 40 20 60 20 80 40 80 60 80 80 80 80 60 80 40 80 20 60 20 40 20 -smooth 1
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    mytest {canvas .c} {
        *
    }
} -cleanup {destroy .c} -result 1

test canvas-7.1 {oval} -body {
    canvas .c
    .c create rectangle -10 -10 200 200 -fill "" -outline black
    .c create line 0 0 0 80 40 80 40 0 0 0 -width 3
    .c create oval 0 0 40 80 -outline red -width 3
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    mytest {canvas .c} {
        *
    }
} -cleanup {destroy .c} -result 1

test canvas-7.2 {oval} -body {
    # This test is a visual test to see rounding-to-pixel
    # effects in the canvas, compared to exact rendering in PDF
    canvas .c
    .c create rectangle -10 -10 200 200 -fill "" -outline black
    .c create line 1 1 1 27 27 27 27 1 1 1 -width 3
    .c create oval 1 1 27 27 -outline red -width 3
    .c create line 26 60 26 14 -width 3
    .c configure -scrollregion [.c bbox all]
    .c xview moveto 0
    .c yview moveto 0
    pack .c -fill both -expand 1
    #wm deiconify .
    mytest {canvas .c} {
        -10 -10 210 210 re S *
        1 1 m 1 27 l 27 27 l 27 1 l 1 1 l S *
        27 14 m
        27 21.18 21.18 27 14 27 c
        6.82 27 1 21.18 1 14 c
        1 6.82 6.82 1 14 1 c
        21.18 1 27 6.82 27 14 c s *
        26 60 m 26 14 l S
    }
} -cleanup {destroy .c} -result 1

test canvas-8.1 {dash} -body {
    canvas .c
    .c create line 10 10 80 80 -dash "..."
    mytest {canvas .c} {
        0 0 0 RG 0 0 0 rg 1 w \[2 4 2 4 2 4\] 0 d 1 j 10 10 m 80 80 l S
    }
} -cleanup {destroy .c} -result 1

test canvas-8.2 {dash} -body {
    canvas .c
    .c create line 10 10 80 80 -dash "..." -width 5
    mytest {canvas .c} {
        0 0 0 RG 0 0 0 rg 5 w \[10 20 10 20 10 20\] 0 d 1 j 10 10 m 80 80 l S
    }
} -cleanup {destroy .c} -result 1

test canvas-8.3 {dash} -body {
    canvas .c
    .c create line 10 10 80 80 -dash ". - "
    mytest {canvas .c} {
        0 0 0 RG 0 0 0 rg 1 w \[2 8 6 8\] 0 d 1 j 10 10 m 80 80 l S
    }
} -cleanup {destroy .c} -result 1

# TBD: Test for angled text needs 8.6
test canvas-9.1 {angled text} -constraints runin86 -body {
    # test angled text on canvas
    canvas .c -width 400 -height 400
    # mark anchor position with a cross
    .c create line {90 200 110 200}
    .c create line {100 190 100 210}
    for {set angle 0} {$angle < 180} {incr angle 20} {
        .c create text {100 200} -anchor w -text "String $angle." -angle $angle -underline 6
    }
    mytest {canvas .c} {
        ????
    }
} -cleanup {destroy .c} -result 1

test canvas-20.1 {demo} -constraints "demo" -body {
    # Find the demo for canvas
    set dir $::tk_library/demos
    source $dir/widget
    set pdfcmds {}
    if {[file exists $dir/goldberg.tcl]} {
        source $dir/goldberg.tcl
        lappend pdfcmds {canvas .goldberg.c -bg 1} {startPage}
        wm deiconify [winfo toplevel .goldberg]
        # Kill off animations
        catch {after cancel $animationCallbacks(goldberg)}
    }
    source $dir/items.tcl
    wm deiconify [winfo toplevel .items.frame.c]
    # Scroll down to the widgets to get them mapped
    update
    foreach {x1 x2} [.items.frame.c xview] break
    .items.frame.c xview moveto [expr {1.0 - ($x2 - $x1)}]
    foreach {y1 y2} [.items.frame.c yview] break
    .items.frame.c yview moveto [expr {1.0 - ($y2 - $y1)}]
    update
    lappend pdfcmds {canvas .items.frame.c}
    eval mytest -debug -paper a4 -margin 15m $pdfcmds {
        *
    }
} -cleanup {destroy .items .goldberg} -result 1

::tcltest::cleanupTests

# To make sure we exit even though Tk is loaded
exit
