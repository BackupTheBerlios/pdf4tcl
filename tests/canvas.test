# Test canvas commands                                               -*-tcl-*-
#
# $Id$

source [file join [file dirname [file join [pwd] [info script]]] init.tcl]

package require Tk
wm withdraw .

test canvas-1.1 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest {canvas .c} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-1.2 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest -orient 1 {canvas .c -x 20 -y 20 -width 200 -height 200} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-1.3 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest {canvas .c -x 20 -y 20 -width 200 -height 200} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-1.4 {basic} -body {
    canvas .c
    .c create line 10 10 80 80
    .c create rectangle 20 20 50 60 -fill red -outline blue
    mytest {canvas .c -bbox {25 15 45 60}} {
        0 0 0 RG 0 0 0 rg 1 w 1 j 10 10 m 80 80 l S
        *
        0 0 1 RG 1 0 0 rg 1 w 20 20 30 40 re B
    }
} -cleanup {destroy .c} -result 1

test canvas-2.1 {demo} -body {
    # Find the demo for canvas
    source $::tk_library/demos/widget
    source $::tk_library/demos/items.tcl
    #wm deiconify [winfo toplevel .items.frame.c]
    mytest {canvas .items.frame.c} {
        *
    }
} -cleanup {destroy .item} -result 1

# To make sure we exit even though Tk is loaded
exit
